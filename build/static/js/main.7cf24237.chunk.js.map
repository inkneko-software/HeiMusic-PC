{"version":3,"sources":["serviceWorker.js","components/MusicListDisplay.js","components/LeftPanel.js","components/TopSystemMenu.js","components/LoginForm.js","components/RecoverForm.js","components/RegisterForm.js","components/TitleBarUserRegion.js","components/TitleBar.js","components/VolumePanel.js","components/MusicPlayer.js","components/AppMainFrame.js","index.js"],"names":["Boolean","window","location","hostname","match","config","require","remote","MusicListDisplay","props","tid","loginUser","undefined","headers","id","label","width","state","albumInfo","name","ptid","pic","listen_num","create_time","cur_song_num","total_song_num","musicList","this","className","Avatar","variant","src","style","fontSize","Button","onClick","length","PostPlayEvent","bind","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","header","TableCell","key","align","maxWidth","TableBody","row","index","hover","role","tabIndex","mid","onDoubleClick","textOverflow","overflow","whiteSpace","title","song_name","singer","album_name","https","options","host","port","method","client_ua","path","callback","response","str","on","chunk","json","JSON","parse","console","log","dissinfo","album_pic","cover_url","dissname","setState","collection_id","music_nums","i","list","push","musicInfo","music_id","music_name","join","album_pmid","file","media_fid","media_list","media_id","size_128mp3","mp3_320k","size_320mp3","mp3_128k","size_flac","media_flac","request","end","event","Event","dispatchEvent","React","Component","LeftPanel","currentSelectedBtnId","userCollectionList","ExpansionPanel","classes","root","elevation","expanded","ExpansionPanelSummary","content","Typography","ExpansionPanelDetails","ListBtnOnclick","defaultExpanded","collectionInfo","collectionId","collectionName","ReactDOM","render","document","getElementById","http","collections","classList","remove","add","unmountComponentAtNode","ipcRenderer","TopSystemMenu","ipcMain","windowMode","maximizeIcon","onCloseMinimized","IconButton","MinimizeOnclick","MaximizeOnlick","CloseOnclick","data","action","send","IPCWindowControl","LoginForm","closeCallback","registerCallback","recoverCallback","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","dividers","TextField","margin","type","fullWidth","DialogActions","color","RecoverForm","RegisterForm","emailCheckFailed","emailHint","email_notice_style","nickCheckFailed","nickHint","nick_notice_style","passwordCheckFailed","passwordHint","password_notice_style","repasswordCheckFailed","repasswordHint","repassword_notice_style","accessCodeCheckFailed","accesscodeHint","accessCode_notice_style","inviteCodeCheckFailed","inviteCodeHint","inviteCode_notice_style","onBlur","emailCheckCallback","error","InputLabel","nickcheckFailed","height","accesscode_notice_style","emailcheckFailed","TitleBarUserRegion","showLoginForm","showRegisterForm","showRecoverForm","openLoginForm","closeLoginForm","openRegisterForm","openRecoverForm","closeRegisterForm","closeRecoverForm","TitleBar","VolumeSlider","withStyles","paddingTop","paddingBottom","thumb","backgroundColor","border","borderRadius","boxShadow","active","valueLabel","left","track","rail","opacity","Slider","VolumePanel","panelDynamicStyle","display","value","onChange","orientation","MusicSlider","marginTop","marginLeft","MusicPlayer","audio","Audio","audioInfo","progress","music_cover_url","MusicNote","toString","music_singer","playBtnIcon","qulity","qulityColor","volumePanelOpen","volume","playlist","currentTid","currentPlayIndex","step","OnSliderChange","PlayPrevious","OnPauseEvent","PlayNext","OnVolumeSliderChange","VolumePanelEvent","durationLabel","addEventListener","MusicPlayerListener","onended","PlayEndEvent","saveHistory","currentTime","sendSync","getHistory","paused","play","pause","PlayMusic","resourceURL","playedTime","ontimeupdate","spentMinutes","Math","floor","spentSeconds","durationMinutes","duration","durationSeconds","onloadedmetadata","song_cover_pmid","album_ptid","qualityName","filename","setAudio","newValue","AppMainFrame","StrictMode","getElementsByTagName","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oWAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0KCAAC,G,OAFSJ,OAAOK,QAAQ,YAAYC,OAEpBD,QAAQ,qBAyMfE,E,kDAtMX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,IAAMD,EAAMC,IACjB,EAAKC,UAAY,UACMC,IAAnB,EAAKD,YAEL,EAAKA,UAAY,GAGrB,EAAKE,QAAU,CACX,CAACC,GAAG,OAAQC,MAAO,eAAMC,MAAO,OAChC,CAACF,GAAG,SAAUC,MAAO,eAAMC,MAAO,OAClC,CAACF,GAAG,QAASC,MAAO,eAAMC,MAAO,QAGrC,EAAKC,MACL,CACIC,UACA,CACIR,IAAK,KACLS,KAAM,qBACNC,KAAM,KACNC,IAAK,KACLC,WAAY,MACZC,YAAa,KACbC,aAAc,KACdC,eAAgB,MAEpBC,UACA,IA7BU,E,qDAgDT,IAAD,OACJ,OAAiB,OAAbC,KAAKjB,IAED,yBAAKkB,UAAU,cACX,yBAAKA,UAAU,mBAAf,+CAQJ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,aACX,kBAACC,EAAA,EAAD,CAASD,UAAU,cAAcE,QAAQ,SAASC,IAAKJ,KAAKV,MAAMC,UAAUG,KAAK,kBAAC,IAAD,CAAWW,MAAO,CAACC,SAAU,OAC9G,yBAAKL,UAAU,eACX,yBAAKA,UAAU,oBAAoBD,KAAKV,MAAMC,UAAUC,MACxD,yBAAKS,UAAU,0BAA0B,sBAASD,KAAKV,MAAMC,UAAUI,YACvE,yBAAKM,UAAU,wBACX,kBAACM,EAAA,EAAD,CAAQN,UAAU,qDAAqDO,QAASR,KAAKV,MAAMS,UAAUU,OAAS,EAAGT,KAAKU,cAAcC,KAAKX,KAAM,GAAK,cAApJ,4BACA,kBAACO,EAAA,EAAD,CAAQN,UAAU,4BAAlB,mBAIZ,yBAAKA,UAAU,aACX,kBAACW,EAAA,EAAD,CAAgBX,UAAU,6BACtB,kBAACY,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,eAAed,UAAU,mBACpD,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKjB,KAAKd,QAAQgC,KAAI,SAACC,GAAD,OACd,kBAACC,EAAA,EAAD,CACAC,IAAKF,EAAOhC,GACZmC,MAAOH,EAAOG,MACdjB,MAAO,CAAEkB,SAAUJ,EAAO9B,QAEzB8B,EAAO/B,YAKpB,kBAACoC,EAAA,EAAD,CAAWvB,UAAU,wBAChBD,KAAKV,MAAMS,UAAUmB,KAAI,SAACO,EAAKC,GAC5B,OACI,kBAACT,EAAA,EAAD,CAAUU,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAGR,IAAKI,EAAIK,IAAKC,cAAe,EAAKrB,cAAcC,KAAK,EAAMe,IACjG,kBAACN,EAAA,EAAD,CAAWf,MAAO,CAACkB,SAAU,MAAOS,aAAc,WAAYC,SAAU,SAAUC,WAAY,UAAYb,IAAK,EAAGC,MAAO,OAAQa,MAAOV,EAAIW,WAAW,uBAAG5B,QAAS,EAAKE,cAAcC,KAAK,EAAMe,GAAQzB,UAAU,iCAAiCwB,EAAIW,YACxP,kBAAChB,EAAA,EAAD,CAAWf,MAAO,CAACkB,SAAU,MAAOS,aAAc,WAAYC,SAAU,SAAUC,WAAY,UAAYb,IAAK,EAAGC,MAAO,OAAQa,MAAOV,EAAIY,QAASZ,EAAIY,QACzJ,kBAACjB,EAAA,EAAD,CAAWf,MAAO,CAACkB,SAAU,MAAOS,aAAc,WAAYC,SAAU,SAAUC,WAAY,UAAYb,IAAK,EAAGC,MAAO,OAAQa,MAAOV,EAAIa,YAAab,EAAIa,uB,0CAczM,IAAIC,EAAQjE,OAAOK,QAAQ,QAC3B,GAAiB,OAAbqB,KAAKjB,IAAT,CAKA,IAAIyD,EAAS,CACTC,KAAM,oBACNC,KAAM,GACNC,OAAQ,MACRzD,QAAQ,CACJ,aAAcR,EAAOkE,WAEzBC,KAAK,4BAAD,OAA8B7C,KAAKjB,IAAnC,qBAAmDiB,KAAKhB,YAE5D8D,EAAW,SAASC,GAEpB,IAAIC,EAAK,GACTD,EAASE,GAAG,QAAQ,SAASC,GACzBF,GAAOE,KAGXH,EAASE,GAAG,MAAO,WAEf,IAAIE,EAAOC,KAAKC,MAAML,GACtBM,QAAQC,IAAIJ,GACZ,IAAIK,EAAWL,EACXM,EAAS,mCAA+BN,EAAKO,WACzB,uBAApBF,EAASG,WACTF,EAAY,2DAGhBzD,KAAK4D,SAAS,CACVrE,UAAU,CACNR,IAAKoE,EAAKU,cACVrE,KAAM2D,EAAK3D,KACXE,IAAM+D,EACN9D,WAAY,EACZC,YAAa,EACbC,aAAc,EACdC,eAAgBqD,EAAKW,cAM7B,IADA,IAAI/D,EAAY,GACPgE,EAAI,EAAGA,EAAIP,EAASQ,KAAKvD,SAAUsD,EAAE,CAC1C,IAAI1B,EAAS,GAKbA,EAAO4B,KAAK,OACZ,IAAIC,EAAY,CACZpC,IAAK0B,EAASQ,KAAKD,GAAGI,SACtB/B,UAAWoB,EAASQ,KAAKD,GAAGK,WAC5B/B,OAAQA,EAAOgC,KAAK,KACpB/B,WAAYkB,EAASQ,KAAKD,GAAGzB,WAC7BgC,WAAY,KACZC,KAAK,CACDC,UAAWhB,EAASQ,KAAKD,GAAGU,WAAWC,SACvCC,YAAanB,EAASQ,KAAKD,GAAGU,WAAWG,SACzCC,YAAarB,EAASQ,KAAKD,GAAGU,WAAWK,SACzCC,UAAWvB,EAASQ,KAAKD,GAAGU,WAAWO,aAG/C1B,QAAQC,IAAIC,EAASQ,KAAKD,GAAGU,WAAWC,UAExC3E,EAAUkE,KAAKC,GAGnBlE,KAAK4D,SAAS,CACV7D,UAAWA,KAEjBY,KAAKX,QACTW,KAAKX,MAEPuC,EAAM0C,QAAQzC,EAASM,GAAUoC,S,oCAGvBxD,GACV,IAAIyD,EAAQ,IAAIC,MAAM,uBACtBD,EAAMpG,IAAMiB,KAAKjB,IACjBoG,EAAMzD,MAAQA,EACdyD,EAAMnB,KAAOhE,KAAKV,MAAMS,UACxBzB,OAAO+G,cAAcF,O,GAlMEG,IAAMC,WCP/B7G,G,OADSJ,OAAOK,QAAQ,YAAYC,OACpBD,QAAQ,qBA8Gf6G,E,kDA3GX,WAAY1G,GAAO,IAAD,8BACd,cAAMA,IACD2G,qBAAuB,KAC5B,EAAK1G,IAAM,KACX,EAAKO,MAAQ,CACToG,mBAAoB,IALV,E,qDAQT,IAAD,OACJ,OACI,oCACI,yBAAKzF,UAAU,wBACX,yBAAKA,UAAU,kBAAkBG,IAAI,aACrC,yBAAKH,UAAU,sBAAf,cAGJ,kBAAC0F,EAAA,EAAD,CAAgBC,QAAS,CAACC,KAAK,SAAWC,UAAW,EAAGC,UAAU,GAC9D,kBAACC,EAAA,EAAD,CAAuBJ,QAAS,CAACC,KAAM,gBAAiBI,QAAS,uBAC7D,kBAACC,EAAA,EAAD,CAAYN,QAAS,CAACC,KAAK,uBAA3B,6BAEJ,kBAACM,EAAA,EAAD,CAAuBP,QAAS,CAACC,KAAK,iBAC9B,kBAACtF,EAAA,EAAD,CAAQqF,QAAS,CAACC,KAAM,eAAgBzG,MAAO,wBAAyBD,GAAI,eAAgBqB,QAASR,KAAKoG,eAAezF,KAAKX,KAAM,QAApI,wCACA,kBAACO,EAAA,EAAD,CAAQqF,QAAS,CAACC,KAAM,eAAgBzG,MAAO,wBAAyBD,GAAI,GAA5E,4BACA,kBAACoB,EAAA,EAAD,CAAQqF,QAAS,CAACC,KAAM,eAAgBzG,MAAO,wBAAyBD,GAAI,GAA5E,kBAGZ,kBAACwG,EAAA,EAAD,CAAgBC,QAAS,CAACC,KAAK,SAAUC,UAAW,EAAI7F,UAAU,mBAAmBoG,iBAAiB,GAClG,kBAACL,EAAA,EAAD,CAAuBJ,QAAS,CAACC,KAAM,gBAAiBI,QAAS,uBAC7D,kBAACC,EAAA,EAAD,CAAYN,QAAS,CAACC,KAAK,uBAA3B,mCAEJ,kBAACM,EAAA,EAAD,CAAuBP,QAAS,CAACC,KAAK,gBAAiB5F,UAAU,4BAEzDD,KAAKV,MAAMoG,mBAAmBxE,KAAI,SAACoF,EAAgB5E,GAC/C,IAAI6E,EAAeD,EAAezC,cAC9B2C,EAAiBF,EAAe9G,KACd8G,EAAenE,MACrC,OAAO,kBAAC5B,EAAA,EAAD,CAAQqF,QAAS,CAACC,KAAM,eAAgBzG,MAAO,wBAAyBD,GAAE,mBAAcoH,GAAgB/F,QAAS,EAAK4F,eAAezF,KAAK,EAAM4F,IAAgBC,W,0CAU/LC,IAASC,OACL,kBAAC,EAAD,CAAkB3H,IAAKiB,KAAKjB,MAC5B4H,SAASC,eAAe,oBAE5B,IAAIC,EAAOvI,OAAOK,QAAQ,QACtB6D,EAAS,CACTC,KAAM,oBACNC,KAAM,GACNC,OAAQ,MACRzD,QAAQ,CACJ,aAAcR,EAAOkE,WAEzBC,KAAM,6BAENC,EAAW,SAASC,GACpB,IAAIC,EAAK,GACTD,EAASE,GAAG,QAAQ,SAASC,GACzBF,GAAOE,KAGXH,EAASE,GAAG,MAAO,WAEf,IAAIE,EAAOC,KAAKC,MAAML,GACtBhD,KAAK4D,SAAS,CACV8B,mBAAoBvC,EAAK2D,eAE/BnG,KAAKX,QACTW,KAAKX,MAEP6G,EAAK5B,QAAQzC,EAASM,GAAUoC,Q,qCAGrB/F,GACX,GAAIA,IAAOa,KAAKyF,qBAAhB,CAGA,GAAkC,OAA9BzF,KAAKyF,qBAEakB,SAASC,eAAe,YAAc5G,KAAKyF,sBACjDsB,UAAUC,OAAO,yBAGhBL,SAASC,eAAe,YAAczH,GAC5C4H,UAAUE,IAAI,yBACzBjH,KAAKyF,qBAAuBtG,EAE5BsH,IAASS,uBAAuBP,SAASC,eAAe,oBACxDH,IAASC,OACL,kBAAC,EAAD,CAAkB3H,IAAKI,IACvBwH,SAASC,eAAe,uB,6CAKT7H,GACnBiB,KAAK4D,SAAS,CACV7E,IAAIA,Q,GAvGQuG,IAAMC,W,6ECPxB4B,G,OAAc7I,OAAOK,QAAQ,YAAYwI,aAmEhCC,GAlEC9I,OAAOK,QAAQ,YAAY0I,Q,kDAGvC,WAAYvI,GAAO,IAAD,8BACd,cAAMA,IACDwI,WAAa,SAClB,EAAKhI,MAAQ,CACTiI,aAAc,kBAAC,IAAD,OAElB,EAAKC,kBAAmB,EANV,E,qDASd,OACI,yBAAKvH,UAAU,2BACX,kBAACwH,EAAA,EAAD,CAAYjH,QAASR,KAAK0H,gBAAgB/G,KAAKX,OAAO,kBAAC,IAAD,OACtD,kBAACyH,EAAA,EAAD,CAAYjH,QAASR,KAAK2H,eAAehH,KAAKX,OAAQA,KAAKV,MAAMiI,cACjE,kBAACE,EAAA,EAAD,CAAYjH,QAASR,KAAK4H,aAAajH,KAAKX,OAAO,kBAAC,IAAD,U,0CAK3C,IAAD,OACfmH,EAAYlE,GAAG,0BAAyB,SAACkC,EAAM0C,GAC3C,OAAQA,EAAKC,QACT,IAAK,WACD,EAAKlE,SAAS,CACV2D,aAAc,kBAAC,IAAD,QAElB,EAAKD,WAAa,WAClB,MACJ,IAAK,UACD,EAAK1D,SAAS,CACV2D,aAAc,kBAAC,IAAD,QAElB,EAAKD,WAAa,e,uCAMjBQ,GACbX,EAAYY,KAAK,iBAAkB,CAACD,OAAQA,M,sCAGd,IAA1B9H,KAAKwH,iBACLxH,KAAKgI,iBAAiB,QAGtBhI,KAAKgI,iBAAiB,U,wCAI1BhI,KAAKgI,iBAAiB,c,uCAIC,UAAnBhI,KAAKsH,WACLtH,KAAKgI,iBAAiB,YAGtBhI,KAAKgI,iBAAiB,e,GA1DN1C,IAAMC,Y,sDCyBnB0C,E,kDA1BX,WAAYnJ,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAQA,EACb,EAAKoJ,cAAgBpJ,EAAMoJ,cAC3B,EAAKC,iBAAmBrJ,EAAMqJ,iBAC9B,EAAKC,gBAAkBtJ,EAAMsJ,gBALd,E,qDAQT,IAAD,OACL,OACI,kBAACC,EAAA,EAAD,CAAQC,KAAMtI,KAAKlB,MAAMwJ,KAAMC,QAASvI,KAAKkI,cAAeM,kBAAgB,qBACxE,kBAACC,EAAA,EAAD,CAAatJ,GAAG,qBAAhB,gBACA,kBAACuJ,EAAA,EAAD,CAAeC,UAAU,GACrB,kBAACC,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,QAAQC,MAAM,2BAAO0J,KAAK,QAAQC,WAAS,EAAC5I,QAAQ,aACjF,kBAACyI,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,eAAK0J,KAAK,WAAWC,WAAS,EAAC5I,QAAQ,cAEzF,kBAAC6I,EAAA,EAAD,KACI,kBAACzI,EAAA,EAAD,CAAQC,QAASR,KAAKkI,cAAee,MAAM,WAA3C,gBACA,kBAAC1I,EAAA,EAAD,CAAQC,QAAS,WAAQ,EAAK0H,gBAAiB,EAAKC,oBAAqBc,MAAM,WAA/E,gBACA,kBAAC1I,EAAA,EAAD,CAAQC,QAAS,WAAQ,EAAK0H,gBAAiB,EAAKE,mBAAoBa,MAAM,WAA9E,kC,GApBI3D,IAAMC,WCyBf2D,E,kDAxBX,WAAYpK,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAQA,EACb,EAAKoJ,cAAgBpJ,EAAMoJ,cAHZ,E,qDAOf,OACI,kBAACG,EAAA,EAAD,CAAQC,KAAMtI,KAAKlB,MAAMwJ,KAAMC,QAASvI,KAAKkI,cAAeM,kBAAgB,qBACxE,kBAACC,EAAA,EAAD,CAAatJ,GAAG,qBAAhB,4BACA,kBAACuJ,EAAA,EAAD,CAAeC,UAAU,GACrB,kBAACC,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,QAAQC,MAAM,2BAAO0J,KAAK,QAAQC,WAAS,EAAE5I,QAAQ,aAClF,kBAACyI,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,eAAK0J,KAAK,WAAWC,WAAS,EAAC5I,QAAQ,aACrF,kBAACyI,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,2BAAO0J,KAAK,WAAWC,WAAS,EAAC5I,QAAQ,aACvF,kBAACyI,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,qBAAM0J,KAAK,OAAOC,WAAS,EAAC5I,QAAQ,cAEtF,kBAAC6I,EAAA,EAAD,KACI,kBAACzI,EAAA,EAAD,CAAQC,QAASR,KAAKkI,cAAee,MAAM,WAA3C,kC,GAlBM3D,IAAMC,W,SC+EjB4D,G,yDA5EX,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IACDA,MAAQA,EACb,EAAKoJ,cAAgBpJ,EAAMoJ,cAC3B,EAAK5I,MAAQ,CACT8J,kBAAkB,EAClBC,UAAW,mGACXC,mBAAoB,2BAEpBC,iBAAiB,EACjBC,SAAU,mCACVC,kBAAmB,2BAEnBC,qBAAqB,EACrBC,aAAc,+HACdC,sBAAuB,2BAEvBC,uBAAuB,EACvBC,eAAgB,GAChBC,wBAAyB,2BAEzBC,uBAAuB,EACvBC,eAAgB,GAChBC,wBAAyB,2BAEzBC,uBAAuB,EACvBC,eAAgB,qEAChBC,wBAAyB,4BA3Bd,E,qDAiCf,OACI,kBAAChC,EAAA,EAAD,CAAQC,KAAMtI,KAAKlB,MAAMwJ,KAAMC,QAASvI,KAAKkI,cAAeM,kBAAgB,oBAAoBjH,SAAS,MACrG,kBAACkH,EAAA,EAAD,CAAatJ,GAAG,qBAAhB,gBACA,kBAACuJ,EAAA,EAAD,CAAerI,MAAO,CAAC,SAAY,SAAUsI,UAAU,GACnD,yBAAK1I,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAW3I,UAAU,sBAAsB4I,OAAO,QAAQ1J,GAAG,QAAQC,MAAM,2BAAO0J,KAAK,QAAQwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAM8J,iBAAkBjJ,QAAQ,aACvL,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAMgK,mBAAoBnJ,QAAQ,UAAUH,KAAKV,MAAM+J,YAEvF,yBAAKpJ,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,eAAK0J,KAAK,OAAOwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAMoL,gBAAiBvK,QAAQ,aACtJ,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAMmK,kBAAmBtJ,QAAQ,UAAUH,KAAKV,MAAMkK,WAEtF,yBAAKvJ,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,eAAK0J,KAAK,WAAYwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAMoK,oBAAqBvJ,QAAQ,aAC/J,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAMsK,sBAAuBzJ,QAAQ,UAAUH,KAAKV,MAAMqK,eAE1F,yBAAK1J,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,2BAAO0J,KAAK,WAAYwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAMuK,sBAAuB1J,QAAQ,aACnK,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAMyK,wBAAyB5J,QAAQ,UAAUH,KAAKV,MAAMwK,iBAE5F,yBAAK7J,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,qBAAM0J,KAAK,OAAOwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAM0K,sBAAuB7J,QAAQ,aAC7J,kBAACI,EAAA,EAAD,CAAQF,MAAO,CAAE,OAAU,qBAAsBsK,OAAO,IAAK1B,MAAM,UAAU9I,QAAQ,aAArF,kCACA,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAMsL,wBAAyBzK,QAAQ,UAAUH,KAAKV,MAAM2K,iBAE5F,yBAAKhK,UAAU,8BACX,kBAAC2I,EAAA,EAAD,CAAWC,OAAO,QAAQ1J,GAAG,WAAWC,MAAM,qBAAM0J,KAAK,OAAQwB,OAAQtK,KAAKuK,mBAAmB5J,KAAKX,MAAOwK,MAAOxK,KAAKV,MAAM6K,sBAAuBhK,QAAQ,aAC9J,kBAACsK,EAAA,EAAD,CAAYxK,UAAWD,KAAKV,MAAM+K,wBAAyBlK,QAAQ,UAAUH,KAAKV,MAAM8K,kBAKhG,kBAACpB,EAAA,EAAD,KACI,kBAACzI,EAAA,EAAD,CAAQC,QAASR,KAAKkI,cAAee,MAAM,WAA3C,oB,2CAOZjJ,KAAK4D,SAAS,CAAEiH,kBAAkB,EAAMxB,UAAW,gB,GA1EhC/D,IAAMC,YCkDlBuF,E,kDArDX,WAAYhM,GAAQ,IAAD,8BACf,cAAMA,IACDQ,MAAQ,CACTyL,eAAe,EACfC,kBAAkB,EAClBC,iBAAgB,GALL,E,qDASf,OACI,yBAAK9L,GAAG,yBACJ,kBAACoB,EAAA,EAAD,CAAQN,UAAU,iCAAiCO,QAASR,KAAKkL,cAAcvK,KAAKX,OAApF,4BAGA,kBAAC,EAAD,CAAWsI,KAAMtI,KAAKV,MAAMyL,cAAe7C,cAAelI,KAAKmL,eAAexK,KAAKX,MAAOmI,iBAAkBnI,KAAKoL,iBAAiBzK,KAAKX,MAAOoI,gBAAiBpI,KAAKqL,gBAAgB1K,KAAKX,QACzL,kBAAC,EAAD,CAAcsI,KAAMtI,KAAKV,MAAM0L,iBAAkB9C,cAAelI,KAAKsL,kBAAkB3K,KAAKX,QAC5F,kBAAC,EAAD,CAAasI,KAAMtI,KAAKV,MAAM2L,gBAAiB/C,cAAelI,KAAKuL,iBAAiB5K,KAAKX,W,mFAWjGA,KAAK4D,SAAS,CAAEmH,eAAe,M,uCAI/B/K,KAAK4D,SAAS,CAAEmH,eAAe,M,yCAI/B/K,KAAK4D,SAAS,CAAEoH,kBAAkB,M,0CAIlChL,KAAK4D,SAAS,CAAEoH,kBAAkB,M,wCAIlChL,KAAK4D,SAAS,CAAEqH,iBAAiB,M,yCAIjCjL,KAAK4D,SAAS,CAAEqH,iBAAiB,Q,GAhDR3F,IAAMC,WCWxBiG,G,8KAXP,OACI,yBAAKvL,UAAU,iBACX,yBAAKA,UAAU,0BACf,kBAAC,EAAD,MACA,yBAAKA,UAAU,mCACf,kBAAC,EAAD,W,GAPOqF,IAAMC,Y,mKCAvBkG,I,OAAgBC,YAAW,CAC7B7F,KAAM,CACFoD,MAAO,UACP0C,WAAY,EACZC,cAAe,GAEjBC,MAAO,CACLlB,OAAQ,EACRtL,MAAO,GACPyM,gBAAiB,UACjBC,OAAQ,YACRC,aAAc,EACd,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLL,aAAc,GAEhBM,KAAM,CACJN,aAAc,EACdO,QAAS,EACTT,gBAAiB,YA1BHJ,CA4Bfc,MAuBQC,G,kDApBX,WAAY3N,GAAO,IAAD,8BACd,cAAMA,IACDA,MAAQA,EAFC,E,qDAOd,IAAI4N,EAAoB,CACpBC,QAAS3M,KAAKlB,MAAMwJ,KAAM,QAAS,QAGvC,OACI,yBAAKrI,UAAU,oBAAoBI,MAAOqM,GACtC,kBAACjB,GAAD,CAAcxL,UAAU,gBAAgB2M,MAAO5M,KAAKlB,MAAM8N,MAAOhH,QAAS,CAACiG,MAAO,4BAA6BgB,SAAU7M,KAAKlB,MAAM+N,SAAUC,YAAY,kB,GAdhJxH,IAAMC,WCV1B7G,IAJQJ,OAAOK,QAAQ,SAChBL,OAAOK,QAAQ,QACjBL,OAAOK,QAAQ,MACXL,OAAOK,QAAQ,YAAYC,OACpBD,QAAQ,qBACxBwI,GAAc7I,OAAOK,QAAQ,YAAYwI,YAEzC4F,GAAcrB,YAAW,CAC3B7F,KAAM,CACJoD,MAAO,UACP+D,WAAY,EACZrB,WAAY,EACZC,cAAe,EACfjB,OAAQ,GAEVkB,MAAO,CACLlB,OAAQ,EACRtL,MAAO,EACPyM,gBAAiB,UAEjBkB,WAAY,EACZC,YAAa,EACb,6BAA8B,CAC5BhB,UAAW,WAEbU,QAAS,UAEXT,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACL1B,OAAQ,EACRqB,aAAc,GAEhBM,KAAM,CACJ3B,OAAQ,EACRqB,aAAc,EACdO,QAAS,EACTT,gBAAiB,YAhCHJ,CAkCfc,KAiXUU,G,kDA7WX,WAAYpO,GAAO,IAAD,8BACd,cAAMA,IACDqO,MAAQ,IAAIC,MACjB,EAAKC,UAAY,GACjB,EAAK/N,MAAS,CACVgO,SAAU,EACVC,gBAAiBC,IAAUC,WAC3BrJ,WAAY,2BACZsJ,aAAc,mBACdC,YAAa,kBAAC,KAAD,CAAkBtN,MAAO,CAACC,SAAU,MACjDsN,OAAQ,GACRC,YAAa,QACbC,iBAAiB,EACjBC,OAAQ,IAIZ,EAAKC,SAAW,GAChB,EAAKC,WAAa,KAClB,EAAKC,iBAAmB,KAnBV,E,qDAsBd,OACI,yBAAKjO,UAAU,sBACX,kBAAC8M,GAAD,CAAaH,MAAO5M,KAAKV,MAAMgO,SAAUa,KAAM,GAAKtB,SAAU7M,KAAKoO,eAAezN,KAAKX,MAAOK,MAAO,CAAChB,MAAO,UAC7G,yBAAKY,UAAU,8BACX,yBAAKA,UAAU,cACX,kBAACC,EAAA,EAAD,CAAQD,UAAU,2BAA2BE,QAAQ,SAASC,IAAKJ,KAAKV,MAAMiO,iBAAiB,kBAAC,IAAD,OAC/F,yBAAKtN,UAAU,2BACX,yBAAKA,UAAU,mBAAmBD,KAAKV,MAAM8E,YAC7C,yBAAKnE,UAAU,qBAAqBD,KAAKV,MAAMoO,gBAGvD,yBAAKzN,UAAU,iBACX,kBAACwH,EAAA,EAAD,CAAYxH,UAAU,2BAA0B,kBAAC,KAAD,CAAQI,MAAO,CAACC,SAAS,OACzE,kBAACmH,EAAA,EAAD,CAAYxH,UAAU,yBAAyBO,QAASR,KAAKqO,aAAa1N,KAAKX,OAAO,kBAAC,KAAD,CAAcK,MAAO,CAACC,SAAS,OACrH,kBAACmH,EAAA,EAAD,CAAYxH,UAAU,yBAAyBO,QAASR,KAAKsO,aAAa3N,KAAKX,OAAQA,KAAKV,MAAMqO,aAClG,kBAAClG,EAAA,EAAD,CAAYxH,UAAU,yBAAyBO,QAASR,KAAKuO,SAAS5N,KAAKX,OAAO,kBAAC,KAAD,CAAUK,MAAO,CAACC,SAAS,OAC7G,kBAAC,GAAD,CAAagI,KAAMtI,KAAKV,MAAMwO,gBAAiBlB,MAAO5M,KAAKV,MAAMyO,OAAQlB,SAAU7M,KAAKwO,qBAAqB7N,KAAKX,QAClH,kBAACyH,EAAA,EAAD,CAAYxH,UAAU,2BAA4BO,QAASR,KAAKyO,iBAAiB9N,KAAKX,OAAO,kBAAC,KAAD,CAAYK,MAAO,CAACC,SAAS,QAE9H,yBAAKL,UAAU,oBACX,yBAAKA,UAAU,uBAAuBD,KAAKV,MAAMoP,eACjD,yBAAKzO,UAAU,yBAAyBI,MAAO,CAAC4I,MAAOjJ,KAAKV,MAAMuO,cAAe7N,KAAKV,MAAMsO,QAC5F,kBAACnG,EAAA,EAAD,CAAYxH,UAAU,+BAA8B,kBAAC,KAAD,CAAYI,MAAO,CAACC,SAAS,Y,0CAOjF,IAAD,OACfhC,OAAOqQ,iBAAiB,sBAAuB3O,KAAK4O,oBAAoBjO,KAAKX,OAC7EA,KAAKmN,MAAM0B,QAAU7O,KAAK8O,aAAanO,KAAKX,MAE5CmH,GAAYlE,GAAG,gCAA+B,SAACkC,EAAM0C,GACjD,OAAQA,EAAKC,QACT,IAAK,QACD,EAAKwG,eACL,MACJ,IAAK,OACD,EAAKC,WACL,MACJ,IAAK,WACD,EAAKF,mBAKjBlH,GAAYlE,GAAG,qCAAoC,SAACkC,EAAM0C,GACtDnJ,GAAOqQ,YAAY,EAAKd,WAAY,EAAKD,SAAU,EAAKE,iBAAkB,EAAKf,MAAM6B,aACrF7H,GAAY8H,SAAS,iBAAkB,CAACnH,OAAQ,YAGtCpJ,GAAOwQ,e,yCAgBrBlP,KAAK4D,SAAS,CAACkK,iBAAkB9N,KAAKV,MAAMwO,oB,qCAIrB,KAAnB9N,KAAKmN,MAAM/M,OAIW,IAAtBJ,KAAKmN,MAAMgC,QACXnP,KAAKmN,MAAMiC,OACXpP,KAAK4D,SAAS,CACV+J,YAAa,kBAAC,KAAD,CAAmBtN,MAAO,CAACC,SAAU,UAKtDN,KAAKmN,MAAMkC,QACXrP,KAAK4D,SAAS,CACV+J,YAAa,kBAAC,KAAD,CAAkBtN,MAAO,CAACC,SAAU,Y,qCAMlC,MAAnBN,KAAKiO,aAGqB,IAA1BjO,KAAKkO,iBACLlO,KAAKkO,iBAAmBlO,KAAKgO,SAASvN,OAAS,EAG/CT,KAAKkO,kBAAoB,EAG7BlO,KAAKsP,UAAUtP,KAAKgO,SAAShO,KAAKkO,sB,iCAIX,MAAnBlO,KAAKiO,aAGLjO,KAAKkO,mBAAqBlO,KAAKgO,SAASvN,OAAS,EACjDT,KAAKkO,iBAAmB,EAGxBlO,KAAKkO,kBAAoB,EAI7BlO,KAAKsP,UAAUtP,KAAKgO,SAAShO,KAAKkO,sB,0CAGlB/I,GASbnF,KAAKiO,aAAe9I,EAAMpG,MACzBiB,KAAKgO,SAAW7I,EAAMnB,KACtBhE,KAAKiO,WAAa9I,EAAMpG,KAE7BiB,KAAKkO,iBAAmB/I,EAAMzD,MAC9B1B,KAAKsP,UAAUnK,EAAMnB,KAAKmB,EAAMzD,U,+BAG1B6N,GAAsC,IAAzBC,EAAwB,uDAAb,EAAGJ,IAAU,yDAC1CpP,KAAKmN,MAAM/M,IAAMmP,EACjBvP,KAAKmN,MAAMsC,aAAc,WACrB,IAAIC,EAAeC,KAAKC,MAAM5P,KAAKmN,MAAM6B,YAAc,IACnDa,EAAeF,KAAKC,MAAM5P,KAAKmN,MAAM6B,YAAc,IACvDU,EAAeA,EAAc,EAAIA,EAAc,IAAIA,EACnDG,EAAeA,EAAc,EAAIA,EAAc,IAAIA,EAEnD,IAAIC,EAAkBH,KAAKC,MAAM5P,KAAKmN,MAAM4C,SAAW,IACnDC,EAAkBL,KAAKC,MAAM5P,KAAKmN,MAAM4C,SAAW,IACvDD,EAAkBA,EAAiB,EAAIA,EAAiB,IAAIA,EAC5DE,EAAkBA,EAAiB,EAAIA,EAAiB,IAAIA,EAE5DhQ,KAAK4D,SAAS,CACV0J,SAAWtN,KAAKmN,MAAM6B,YAAchP,KAAKmN,MAAM4C,SAAY,IAC3DrB,cAAc,GAAD,OAAKgB,EAAL,YAAqBG,EAArB,cAAuCC,EAAvC,YAA0DE,MAE7ErP,KAAKX,MACPA,KAAKmN,MAAM8C,iBAAmB,WAC1BjQ,KAAKmN,MAAM6B,YAAcQ,GAC3B7O,KAAKX,MAEPA,KAAKmN,MAAMY,OAAS/N,KAAKV,MAAMyO,OAAS,KAC3B,IAATqB,IACApP,KAAKmN,MAAMiC,OACXpP,KAAK4D,SAAS,CAAE+J,YAAa,kBAAC,KAAD,CAAmBtN,MAAO,CAACC,SAAU,W,qCAKlEN,KAAKkO,mBAAqBlO,KAAKgO,SAASvN,OAAQ,EAChDT,KAAKkO,iBAAmB,EAGxBlO,KAAKkO,kBAAoB,EAE7BlO,KAAKsP,UAAUtP,KAAKgO,SAAShO,KAAKkO,qB,gCAG5BhK,GAAyC,IAA9BsL,EAA6B,uDAAhB,EAAGJ,IAAa,yDAC9C9L,QAAQC,IAAIW,GAEZlE,KAAKqN,UAAY,CACb6C,gBAAiBhM,EAAUiM,WAC3B/N,UAAW8B,EAAU9B,UACrBC,OAAO6B,EAAU7B,OACjB0N,SAAU,MAGd,IAAIK,EAAc,OACdvC,EAAc,SACdwC,EAAWnM,EAAUK,KAAKC,UAC9B4L,EAAc,KACdvC,EAAa,oBAGb7N,KAAK4D,SAAS,CACV2J,gBAAgB,4DAChBnJ,WAAYF,EAAU9B,UACtBsL,aAAcxJ,EAAU7B,SAG5BrC,KAAK4D,SAAS,CACVgK,OAAQwC,EACRvC,YAAaA,IAGjB,IAAI0B,EAAW,8CAA0Cc,EAA1C,QACfrQ,KAAKsQ,SAASf,EAAaC,EAAYJ,K,qCAwH5BjK,EAAOoL,GACG,KAAjBvQ,KAAKmN,MAAM/M,MAGfJ,KAAK4D,SAAS,CAAC0J,SAAUiD,IACzBvQ,KAAKmN,MAAM6B,YAAchP,KAAKmN,MAAM4C,UAAYQ,EAAS,MAC/B,IAAtBvQ,KAAKmN,MAAMgC,QACXnP,KAAKsO,kB,2CAIQnJ,EAAOoL,GACxBvQ,KAAK4D,SAAS,CAACmK,OAAQwC,IACvBvQ,KAAKmN,MAAMY,OAASwC,EAAW,Q,GAzWbjL,IAAMC,WClCjBiL,G,kDAvBX,WAAY1R,GAAO,uCACTA,G,qDAIN,OACA,yBAAKmB,UAAU,kBACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,gBACX,kBAAC,EAAD,MACA,yBAAKd,GAAG,oBACR,yBAAKA,GAAG,gBACJ,kBAAC,GAAD,OAEJ,yBAAKA,GAAG,kBAAkBkB,MAAO,CAACsM,QAAQ,kB,GAjB/BrH,IAAMC,WCDjCkB,IAASC,OACP,kBAAC,IAAM+J,WAAP,KACE,kBAAC,GAAD,OAEF9J,SAAS+J,qBAAqB,QAAQ,IZyHlC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzG,GACLlH,QAAQkH,MAAMA,EAAM0G,a","file":"static/js/main.7cf24237.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Button from \"@material-ui/core/Button\"\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport MusicNote from \"@material-ui/icons/MusicNote\"\n\nimport \"./css/MusicListDisplay.css\"\nconst remote = window.require(\"electron\").remote\n\nconst config = remote.require(\"./heiMusicConfig\")\n\nclass MusicListDisplay extends React.Component{\n    constructor(props){\n        super(props)\n        this.tid = props.tid\n        this.loginUser = 'qq' //props.loginUser\n        if (this.loginUser === undefined)\n        {\n            this.loginUser = 0\n        }\n\n        this.headers = [\n            {id:\"name\", label: \"歌曲\", width: \"40%\"},\n            {id:\"singer\", label: \"歌手\", width: \"30%\"},\n            {id:\"album\", label: \"专辑\", width: \"30%\"}\n        ];\n\n        this.state = \n        {\n            albumInfo:\n            {\n                tid: null,\n                name: \"加载中\",\n                ptid: null,\n                pic: null,\n                listen_num: \"---\",\n                create_time: null,\n                cur_song_num: null,\n                total_song_num: null\n            },\n            musicList:\n            [\n                /*{\n                    mid: null,\n                    song_name: null,\n                    singer: null,\n                    album_name: null,\n                    album_ptid: null,\n                    file:{\n                        media_fid: null,\n                        size_128mp3: null,\n                        size_320mp3: null,\n                        size_flac: null\n                    }\n                }, ...*/\n            ]\n        }\n\n    }\n\n    render(){\n        if (this.tid === null){\n            return (\n                <div className=\"empty-page\">\n                    <div className=\"empty-page-text\">\n                        墨猫音乐客户端\n                    </div>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div className=\"music-list-display\">\n                    <div className=\"diss-info\">\n                        <Avatar  className=\"album-cover\" variant=\"square\" src={this.state.albumInfo.pic}><MusicNote style={{fontSize: 72}}/></Avatar>\n                        <div className=\"album-brief\">\n                            <div className=\"album-brief-name\">{this.state.albumInfo.name}</div>\n                            <div className=\"album-brief-listen-num\">{\"播放量 \" + this.state.albumInfo.listen_num}</div>\n                            <div className=\"ablum-brief-tool-bar\">\n                                <Button className=\"album-brief-tool-bar-btn album-brief-tool-bar-play\" onClick={this.state.musicList.length > 0? this.PostPlayEvent.bind(this, 0) : ()=>{}}>播放全部</Button>\n                                <Button className=\"album-brief-tool-bar-btn\">下载</Button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"song-list\">\n                        <TableContainer className=\"song-list-table-container\">\n                            <Table stickyHeader aria-label=\"sticky table\" className=\"song-list-table\">\n                                <TableHead>\n                                    <TableRow>\n                                        {this.headers.map((header) => (\n                                            <TableCell\n                                            key={header.id}\n                                            align={header.align}\n                                            style={{ maxWidth: header.width}}\n                                            >\n                                            {header.label}\n                                            </TableCell>\n                                        ))}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody className=\"song-list-table-body\">\n                                    {this.state.musicList.map((row, index) => {\n                                        return (\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.mid} onDoubleClick={this.PostPlayEvent.bind(this, index)}>\n                                                    <TableCell style={{maxWidth: \"40%\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }} key={1} align={\"left\"} title={row.song_name}><a onClick={this.PostPlayEvent.bind(this, index)} className=\"music-list-songname-clickable\">{row.song_name}</a></TableCell>\n                                                    <TableCell style={{maxWidth: \"30%\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }} key={2} align={\"left\"} title={row.singer}>{row.singer}</TableCell>\n                                                    <TableCell style={{maxWidth: \"30%\", textOverflow: \"ellipsis\", overflow: \"hidden\", whiteSpace: \"nowrap\" }} key={3} align={\"left\"} title={row.album_name}>{row.album_name}</TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </div>\n            )\n        }\n    }\n    \n    componentDidMount(){\n        var https = window.require(\"http\")\n        if (this.tid === null)\n        {\n            return\n        }\n\n        var options ={\n            host: 'music.inkneko.com',\n            port: 80,\n            method: \"GET\",\n            headers:{\n                \"User-Agent\": config.client_ua\n            },\n            path: `/api/v1/getCollection?id=${this.tid}&loginUin=${this.loginUser}`\n        }\n        let callback = function(response)\n        {\n            let str =\"\"\n            response.on('data', function(chunk){\n                str += chunk\n            })\n\n            response.on('end', function()\n            {\n                let json = JSON.parse(str)\n                console.log(json)\n                let dissinfo = json\n                let album_pic = `http://music.inkneko.com/${json.cover_url}`\n                if (dissinfo.dissname===\"我喜欢\"){\n                    album_pic = \"https://y.gtimg.cn/mediastyle/global/img/cover_like.png\"\n                }\n                //cd info\n                this.setState({\n                    albumInfo:{\n                        tid: json.collection_id,\n                        name: json.name,\n                        pic:  album_pic,\n                        listen_num: 0,\n                        create_time: 0,\n                        cur_song_num: 1,\n                        total_song_num: json.music_nums\n                    }\n                })\n\n                //song list\n                let musicList = []\n                for (let i = 0; i < dissinfo.list.length; ++i){\n                    let singer = [];/*\n                    for (let singerIndex=0; singerIndex<dissinfo.songlist[i].singer.length; ++singerIndex)\n                    {\n                        singer.push(dissinfo.songlist[i].singer[singerIndex].title)\n                    }*/\n                    singer.push(\"nao\")\n                    let musicInfo = {\n                        mid: dissinfo.list[i].music_id,\n                        song_name: dissinfo.list[i].music_name,\n                        singer: singer.join(\"/\"),\n                        album_name: dissinfo.list[i].album_name,\n                        album_pmid: null,\n                        file:{\n                            media_fid: dissinfo.list[i].media_list.media_id,\n                            size_128mp3: dissinfo.list[i].media_list.mp3_320k,\n                            size_320mp3: dissinfo.list[i].media_list.mp3_128k,\n                            size_flac: dissinfo.list[i].media_list.media_flac\n                        }\n                    }\n                    console.log(dissinfo.list[i].media_list.media_id)\n\n                    musicList.push(musicInfo)\n                }\n\n                this.setState({\n                    musicList: musicList\n                })\n            }.bind(this))\n        }.bind(this)\n\n        https.request(options, callback).end();\n    }\n\n    PostPlayEvent(index){\n        let event = new Event(\"MusicPlayerListener\")\n        event.tid = this.tid\n        event.index = index\n        event.list = this.state.musicList\n        window.dispatchEvent(event)\n    }\n\n}\n\nexport default MusicListDisplay","import React from \"react\"\n\nimport Typography from \"@material-ui/core/Typography\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport Button from \"@material-ui/core/Button\"\n\nimport MusicListDisplay from  \"./MusicListDisplay\"\nimport ReactDOM from \"react-dom\"\nimport \"./css/LeftPanel.css\"\n\nconst remote = window.require(\"electron\").remote\nconst config = remote.require(\"./heiMusicConfig\")\n\nclass LeftPanel extends React.Component{\n    constructor(props){\n        super(props)\n        this.currentSelectedBtnId = null\n        this.tid = null\n        this.state = {\n            userCollectionList: []\n        }\n    }\n    render(){\n        return (\n            <>\n                <div className=\"left-panel-logo-wrap\">\n                    <img className=\"left-panel-logo\" src=\"logo.jpg\"/>\n                    <div className=\"left-panel-appname\">HeiMusic!</div>\n                    \n                </div>\n                <ExpansionPanel classes={{root:\"panel\"}}  elevation={0} expanded={true}>\n                    <ExpansionPanelSummary classes={{root: \"panel-summary\", content: \"panel-summary-text\"}}>\n                        <Typography classes={{root:\"panel-summary-text\"}}>我的音乐</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails classes={{root:\"panel-detail\"}}>\n                            <Button classes={{root: \"panel-button\", label: \"panel-button-content\"}} id={\"songlist-uid\"} onClick={this.ListBtnOnclick.bind(this, 'uid')}>我喜欢的音乐</Button>\n                            <Button classes={{root: \"panel-button\", label: \"panel-button-content\"}} id={2}>下载管理</Button>\n                            <Button classes={{root: \"panel-button\", label: \"panel-button-content\"}} id={3}>设置</Button>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n                <ExpansionPanel classes={{root:\"panel\"}} elevation={0}  className=\"panel-music-list\" defaultExpanded={true}>\n                    <ExpansionPanelSummary classes={{root: \"panel-summary\", content: \"panel-summary-text\"}}>\n                        <Typography classes={{root:\"panel-summary-text\"}}>创建的歌单</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails classes={{root:\"panel-detail\"}} className=\"panel-music-list-details\" >\n                        {\n                            this.state.userCollectionList.map((collectionInfo, index)=>{\n                                let collectionId = collectionInfo.collection_id\n                                let collectionName = collectionInfo.name\n                                let collectionTitle = collectionInfo.title\n                                return <Button classes={{root: \"panel-button\", label: \"panel-button-content\"}} id={`songlist-${collectionId}`} onClick={this.ListBtnOnclick.bind(this, collectionId)}>{collectionName}</Button>\n                            })\n                        }\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </>\n        )\n    }\n\n    componentDidMount(){\n        ReactDOM.render(\n            <MusicListDisplay tid={this.tid}/>,\n            document.getElementById(\"display-browser\")\n        )\n        var http = window.require(\"http\")\n        var options ={\n            host: 'music.inkneko.com',\n            port: 80,\n            method: \"GET\",\n            headers:{\n                \"User-Agent\": config.client_ua\n            },\n            path: \"/api/v1/getCollectionList\"\n        }\n        let callback = function(response){\n            let str =\"\"\n            response.on('data', function(chunk){\n                str += chunk\n            })\n\n            response.on('end', function()\n            {\n                let json = JSON.parse(str)\n                this.setState({\n                    userCollectionList: json.collections\n                })\n            }.bind(this))\n        }.bind(this)\n\n        http.request(options, callback).end()\n    }\n\n    ListBtnOnclick(id){\n        if (id === this.currentSelectedBtnId){\n            return\n        }\n        if (this.currentSelectedBtnId !== null)\n        {\n            let selectedBtn = document.getElementById(\"songlist-\" + this.currentSelectedBtnId)\n            selectedBtn.classList.remove(\"panel-button-selected\")\n        }\n        \n        let clickedBtn = document.getElementById(\"songlist-\" + id)\n        clickedBtn.classList.add(\"panel-button-selected\")\n        this.currentSelectedBtnId = id\n        \n        ReactDOM.unmountComponentAtNode(document.getElementById(\"display-browser\"))\n        ReactDOM.render(\n            <MusicListDisplay tid={id}/>,\n            document.getElementById(\"display-browser\")\n        )\n        \n    }\n\n    RenderMusicListDisplay(tid){\n        this.setState({\n            tid:tid\n        })        \n    }\n}\n\nexport default LeftPanel\n","import React from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Close from \"@material-ui/icons/Close\"\nimport Remove from \"@material-ui/icons/Remove\"\nimport Crop32 from \"@material-ui/icons/Crop32\"\nimport FilterNone from \"@material-ui/icons/FilterNone\"\nimport \"./css/TopSystemMenu.css\"\n\nconst ipcRenderer = window.require(\"electron\").ipcRenderer;\nconst ipcMain = window.require(\"electron\").ipcMain;\n\nclass TopSystemMenu extends React.Component{\n    constructor(props){\n        super(props)\n        this.windowMode = \"normal\"\n        this.state = {\n            maximizeIcon: <Crop32/>\n        }\n        this.onCloseMinimized = true\n    }\n    render(){\n        return (\n            <div className=\"top-system-menu-content\">\n                <IconButton onClick={this.MinimizeOnclick.bind(this)}><Remove/></IconButton>\n                <IconButton onClick={this.MaximizeOnlick.bind(this)}>{this.state.maximizeIcon}</IconButton>\n                <IconButton onClick={this.CloseOnclick.bind(this)}><Close/></IconButton>\n            </div>            \n        )\n    }\n\n    componentDidMount(){\n        ipcRenderer.on(\"window-change-callback\",(event,data)=>{\n            switch (data.action){\n                case \"maximize\":\n                    this.setState({\n                        maximizeIcon: <FilterNone/>\n                    })\n                    this.windowMode = \"maximize\"\n                    break;\n                case \"restore\":\n                    this.setState({\n                        maximizeIcon: <Crop32/>\n                    })\n                    this.windowMode = \"normal\"\n                    break;\n            }\n        })\n    }\n\n    IPCWindowControl(action){\n        ipcRenderer.send('window-control', {action: action})\n    }\n    CloseOnclick(){\n        if (this.onCloseMinimized === true){\n            this.IPCWindowControl(\"hide\")\n        }\n        else{\n            this.IPCWindowControl(\"quit\")\n        }\n    }\n    MinimizeOnclick(){\n        this.IPCWindowControl(\"minimize\")\n    }\n\n    MaximizeOnlick(){\n        if (this.windowMode == \"normal\"){\n            this.IPCWindowControl('maximize')\n        }\n        else{\n            this.IPCWindowControl('restore')\n        }\n        \n    }\n}\n\nexport default TopSystemMenu;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.closeCallback = props.closeCallback;\r\n        this.registerCallback = props.registerCallback;\r\n        this.recoverCallback = props.recoverCallback;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.closeCallback} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">登录</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <TextField margin=\"dense\" id=\"email\" label=\"邮箱地址\" type=\"email\" fullWidth variant=\"outlined\" />\r\n                    <TextField margin=\"dense\" id=\"password\" label=\"密码\" type=\"password\" fullWidth variant=\"outlined\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.closeCallback} color=\"primary\">登录</Button>\r\n                    <Button onClick={() => { this.closeCallback(); this.registerCallback()}} color=\"primary\">注册</Button>\r\n                    <Button onClick={() => { this.closeCallback(); this.recoverCallback()}} color=\"primary\">忘记密码</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass RecoverForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.closeCallback = props.closeCallback;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.closeCallback} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">找回密码</DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <TextField margin=\"dense\" id=\"email\" label=\"邮箱地址\" type=\"email\" fullWidth  variant=\"outlined\"/>\r\n                    <TextField margin=\"dense\" id=\"password\" label=\"密码\" type=\"password\" fullWidth variant=\"outlined\"/>\r\n                    <TextField margin=\"dense\" id=\"password\" label=\"确认密码\" type=\"password\" fullWidth variant=\"outlined\" />\r\n                    <TextField margin=\"dense\" id=\"password\" label=\"认证码\" type=\"text\" fullWidth variant=\"outlined\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.closeCallback} color=\"primary\">重置密码</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n}\r\nexport default RecoverForm;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport \"./css/RegisterForm.css\"\r\n\r\nclass RegisterForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n        this.closeCallback = props.closeCallback;\r\n        this.state = {\r\n            emailCheckFailed: false,\r\n            emailHint: \"仅支持腾讯，网易，新浪，谷歌邮箱\",\r\n            email_notice_style: \"register-form-input-hint\",\r\n\r\n            nickCheckFailed: false,\r\n            nickHint: \"小于10个字符\",\r\n            nick_notice_style: \"register-form-input-hint\",\r\n\r\n            passwordCheckFailed: false,\r\n            passwordHint: \"长度为8-15位，需包含字母和数字，可添加下划线\",\r\n            password_notice_style: \"register-form-input-hint\",\r\n\r\n            repasswordCheckFailed: false,\r\n            repasswordHint: \"\",\r\n            repassword_notice_style: \"register-form-input-hint\",\r\n\r\n            accessCodeCheckFailed: false,\r\n            accesscodeHint: \"\",\r\n            accessCode_notice_style: \"register-form-input-hint\",\r\n\r\n            inviteCodeCheckFailed: false,\r\n            inviteCodeHint: \"当前注册需要使用邀请码\",\r\n            inviteCode_notice_style: \"register-form-input-hint\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.closeCallback} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\">\r\n                <DialogTitle id=\"form-dialog-title\">注册</DialogTitle>\r\n                <DialogContent style={{'overflow': 'unset'}} dividers={true}>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField className=\"register-form-input\" margin=\"dense\" id=\"email\" label=\"邮箱地址\" type=\"email\" onBlur={this.emailCheckCallback.bind(this)} error={this.state.emailCheckFailed} variant=\"outlined\" />\r\n                        <InputLabel className={this.state.email_notice_style} variant=\"filled\">{this.state.emailHint}</InputLabel>\r\n                    </div>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField margin=\"dense\" id=\"password\" label=\"昵称\" type=\"text\" onBlur={this.emailCheckCallback.bind(this)} error={this.state.nickcheckFailed} variant=\"outlined\" />\r\n                        <InputLabel className={this.state.nick_notice_style} variant=\"filled\">{this.state.nickHint}</InputLabel>\r\n                    </div>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField margin=\"dense\" id=\"password\" label=\"密码\" type=\"password\"  onBlur={this.emailCheckCallback.bind(this)} error={this.state.passwordCheckFailed} variant=\"outlined\"/>\r\n                        <InputLabel className={this.state.password_notice_style} variant=\"filled\">{this.state.passwordHint}</InputLabel>\r\n                    </div>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField margin=\"dense\" id=\"password\" label=\"确认密码\" type=\"password\"  onBlur={this.emailCheckCallback.bind(this)} error={this.state.repasswordCheckFailed} variant=\"outlined\" />\r\n                        <InputLabel className={this.state.repassword_notice_style} variant=\"filled\">{this.state.repasswordHint}</InputLabel>\r\n                    </div>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField margin=\"dense\" id=\"password\" label=\"认证码\" type=\"text\" onBlur={this.emailCheckCallback.bind(this)} error={this.state.accessCodeCheckFailed} variant=\"outlined\" />\r\n                        <Button style={{ \"margin\": 'auto 0px auto 42px', height:36}} color=\"primary\" variant=\"contained\">发送验证码</Button>\r\n                        <InputLabel className={this.state.accesscode_notice_style} variant=\"filled\">{this.state.accesscodeHint}</InputLabel>\r\n                    </div>\r\n                    <div className=\"register-form-input-region\">\r\n                        <TextField margin=\"dense\" id=\"password\" label=\"邀请码\" type=\"text\"  onBlur={this.emailCheckCallback.bind(this)} error={this.state.inviteCodeCheckFailed} variant=\"outlined\" />\r\n                        <InputLabel className={this.state.inviteCode_notice_style} variant=\"filled\">{this.state.inviteCodeHint}</InputLabel>\r\n                    </div>\r\n                    \r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.closeCallback} color=\"primary\">提交</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    emailCheckCallback() {\r\n        this.setState({ emailcheckFailed: true, emailHint: \"worked.\" });\r\n    }\r\n}\r\nexport default RegisterForm;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\"\r\nimport \"./css/TitleBarUserRegion.css\"\r\nimport LoginForm from \"./LoginForm\";\r\nimport RecoverForm from \"./RecoverForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nclass TitleBarUserRegion extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLoginForm: false,\r\n            showRegisterForm: false,\r\n            showRecoverForm:false\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"title-bar-user-region\">\r\n                <Button className=\"title-bar-user-region-loginbtn\" onClick={this.openLoginForm.bind(this)}>\r\n                    点击登录\r\n                </Button>\r\n                <LoginForm open={this.state.showLoginForm} closeCallback={this.closeLoginForm.bind(this)} registerCallback={this.openRegisterForm.bind(this)} recoverCallback={this.openRecoverForm.bind(this)}/>\r\n                <RegisterForm open={this.state.showRegisterForm} closeCallback={this.closeRegisterForm.bind(this)} />\r\n                <RecoverForm open={this.state.showRecoverForm} closeCallback={this.closeRecoverForm.bind(this)} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    openLoginForm() {\r\n        this.setState({ showLoginForm: true });\r\n    }\r\n\r\n    closeLoginForm() {\r\n        this.setState({ showLoginForm: false });\r\n    }\r\n\r\n    openRegisterForm() {\r\n        this.setState({ showRegisterForm: true });\r\n    }\r\n\r\n    closeRegisterForm() {\r\n        this.setState({ showRegisterForm: false });\r\n    }\r\n\r\n    openRecoverForm() {\r\n        this.setState({ showRecoverForm: true });\r\n    }\r\n\r\n    closeRecoverForm() {\r\n        this.setState({ showRecoverForm: false });\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default TitleBarUserRegion;","import React from \"react\"\r\nimport TopSystemMenu from \"./TopSystemMenu\"\r\nimport TitleBarUserRegion from \"./TitleBarUserRegion\"\r\nimport \"./css/TitleBar.css\"\r\n\r\nclass TitleBar extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"top-title-bar\">\r\n                <div className=\"top-title-bar-padding\"/>\r\n                <TitleBarUserRegion/>\r\n                <div className=\"top-title-bar-function-padding\"/>\r\n                <TopSystemMenu/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleBar;","import React from \"react\"\nimport Slider from \"@material-ui/core/Slider\"\nimport \"./css/VolumePanel.css\"\nimport { withStyles } from '@material-ui/core/styles';\n\nconst VolumeSlider  = withStyles({\n    root: {\n        color: '#52af77',\n        paddingTop: 8,\n        paddingBottom: 8,\n      },\n      thumb: {\n        height: 4,\n        width: 16,\n        backgroundColor: '#52af77',\n        border: '2px solid',\n        borderRadius: 0,\n        '&:focus, &:hover, &$active': {\n          boxShadow: 'inherit',\n        },\n      },\n      active: {},\n      valueLabel: {\n        left: 'calc(-50% + 4px)',\n      },\n      track: {\n        borderRadius: 4,\n      },\n      rail: {\n        borderRadius: 4,\n        opacity: 1,\n        backgroundColor: \"#e3e3e3\"\n      },\n    })(Slider);\n\nclass VolumePanel extends React.Component{\n    constructor(props){\n        super(props)\n        this.props = props\n\n    }\n\n    render(){\n        let panelDynamicStyle = {\n            display: this.props.open? \"unset\": \"none\"\n        }\n\n        return(\n            <div className=\"volume-panel-wrap\" style={panelDynamicStyle}>\n                <VolumeSlider className=\"volume-slider\" value={this.props.value} classes={{thumb: \"fuck-volume-bar-property\"}} onChange={this.props.onChange} orientation=\"vertical\"/>\n            </div>\n            \n        )\n    }\n}\n\nexport default VolumePanel","import React from \"react\"\nimport Slider from \"@material-ui/core/Slider\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport \"./css/MusicPlayer.css\"\nimport  Avatar  from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MusicNote from \"@material-ui/icons/MusicNote\"\nimport SkipPrevious from \"@material-ui/icons/SkipPrevious\"\nimport SkipNext from \"@material-ui/icons/SkipNext\"\nimport PlayCircleFilled from \"@material-ui/icons/PlayCircleFilled\"\nimport PauseCircleFilled from \"@material-ui/icons/PauseCircleFilled\"\nimport QueueMusic from \"@material-ui/icons/QueueMusic\"\nimport VolumeDown from \"@material-ui/icons/VolumeDown\"\nimport VolumeOff from \"@material-ui/icons/VolumeOff\"\nimport Repeat from \"@material-ui/icons/Repeat\"\nimport RepeatOne from \"@material-ui/icons/RepeatOne\"\nimport VolumePanel from \"./VolumePanel\";\n\n\nconst https = window.require(\"https\")\nconst http = window.require(\"http\")\nconst fs = window.require(\"fs\")\nconst remote = window.require(\"electron\").remote\nconst config = remote.require(\"./heiMusicConfig\")\nconst ipcRenderer = window.require(\"electron\").ipcRenderer;\n\nconst MusicSlider = withStyles({\n    root: {\n      color: '#52af77',\n      marginTop: -3,\n      paddingTop: 3,\n      paddingBottom: 0,\n      height: 2,\n    },\n    thumb: {\n      height: 0,\n      width: 0,\n      backgroundColor: '#52af77',\n      //border: '2px solid currentColor',\n      marginTop: -4,\n      marginLeft: -4,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n      display: \"hidden\"\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    track: {\n      height: 2,\n      borderRadius: 4,\n    },\n    rail: {\n      height: 2,\n      borderRadius: 4,\n      opacity: 1,\n      backgroundColor: \"#e3e3e3\"\n    },\n  })(Slider);\n\n\nclass MusicPlayer extends React.Component{\n    constructor(props){\n        super(props)\n        this.audio = new Audio()\n        this.audioInfo = {}\n        this.state  = {\n            progress: 0,\n            music_cover_url: MusicNote.toString(),\n            music_name: \"墨猫音乐\",\n            music_singer: \"author: inkneko.\",\n            playBtnIcon: <PlayCircleFilled style={{fontSize: 42}}/>,\n            qulity: \"\",\n            qulityColor: \"black\",\n            volumePanelOpen: false,\n            volume: 35\n        }\n\n        /* 播放列表信息维护 */\n        this.playlist = []\n        this.currentTid = null;\n        this.currentPlayIndex = null\n    }\n    render(){\n        return(\n            <div className=\"music-player-panel\">\n                <MusicSlider value={this.state.progress} step={0.1} onChange={this.OnSliderChange.bind(this)} style={{width: \"100%\"}} />\n                <div className=\"music-player-panel-wrapper\">\n                    <div className=\"music-info\">\n                        <Avatar className=\"music-player-album-cover\" variant=\"square\" src={this.state.music_cover_url}><MusicNote/></Avatar>\n                        <div className=\"music-info-text-wrapper\">\n                            <div className=\"music-info-name\">{this.state.music_name}</div>\n                            <div className=\"music-info-singer\">{this.state.music_singer}</div>\n                        </div>\n                    </div>\n                    <div className=\"music-control\">\n                        <IconButton className=\"music_control-aside-btn\"><Repeat style={{fontSize:24}}/></IconButton>\n                        <IconButton className=\"music_control-skip-btn\" onClick={this.PlayPrevious.bind(this)}><SkipPrevious style={{fontSize:34}}/></IconButton>\n                        <IconButton className=\"music_control-play-btn\" onClick={this.OnPauseEvent.bind(this)}>{this.state.playBtnIcon}</IconButton>\n                        <IconButton className=\"music_control-skip-btn\" onClick={this.PlayNext.bind(this)}><SkipNext style={{fontSize:34}}/></IconButton>\n                        <VolumePanel open={this.state.volumePanelOpen} value={this.state.volume} onChange={this.OnVolumeSliderChange.bind(this)}/>\n                        <IconButton className=\"music_control-volume-btn\"  onClick={this.VolumePanelEvent.bind(this)}><VolumeDown style={{fontSize:24}}/></IconButton>\n                    </div>\n                    <div className=\"music-misc-panel\">\n                        <div className=\"misc-panel-duration\">{this.state.durationLabel}</div>\n                        <div className=\"misc-panel-qulity-info\" style={{color: this.state.qulityColor}}>{this.state.qulity}</div>\n                        <IconButton className=\"misc-panel-playing-list-btn\"><QueueMusic style={{fontSize:24}}/></IconButton>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    componentDidMount(){\n        window.addEventListener(\"MusicPlayerListener\", this.MusicPlayerListener.bind(this))\n        this.audio.onended = this.PlayEndEvent.bind(this)\n\n        ipcRenderer.on(\"music-player-hotkey-callback\",(event,data)=>{\n            switch (data.action){\n                case \"pause\":\n                    this.OnPauseEvent()\n                    break;\n                case \"next\":\n                    this.PlayNext()\n                    break\n                case \"privious\":\n                    this.PlayPrevious()\n                    break\n            }\n        })\n\n        ipcRenderer.on(\"music-player-saveHistory-callback\",(event,data)=>{\n            config.saveHistory(this.currentTid, this.playlist, this.currentPlayIndex, this.audio.currentTime)\n            ipcRenderer.sendSync('window-control', {action: \"quit\"})\n        })\n\n        let history = config.getHistory()/*\n        if (history !== null){\n            this.playlist = history.playlist\n            this.currentTid = history.tid\n            this.currentPlayIndex = history.index\n            this.PlayMusic(this.playlist[this.currentPlayIndex], history.playedTime, false)\n        }*/\n\n        //播放本地文件\n        // console.log(config.bin)\n        // this.audio.src = \"data:audio/mp3;base64,\"+config.bin\n        // console.log(this.audio.srcObject)\n        // this.audio.play()\n    }\n\n    VolumePanelEvent(){\n        this.setState({volumePanelOpen: !this.state.volumePanelOpen})\n    }\n\n    OnPauseEvent(){\n        if (this.audio.src === \"\"){\n            return\n        }\n\n        if (this.audio.paused === true){\n            this.audio.play()\n            this.setState({\n                playBtnIcon: <PauseCircleFilled style={{fontSize: 42}}/>\n            })\n        }\n        else{\n\n            this.audio.pause()\n            this.setState({\n                playBtnIcon: <PlayCircleFilled style={{fontSize: 42}}/>\n            })\n        }\n    }\n\n    PlayPrevious(){\n        if (this.currentTid == null){\n            return\n        }\n        if (this.currentPlayIndex === 0){\n            this.currentPlayIndex = this.playlist.length - 1\n        }\n        else{\n            this.currentPlayIndex -= 1\n        }\n        \n        this.PlayMusic(this.playlist[this.currentPlayIndex])\n    }\n\n    PlayNext(){\n        if (this.currentTid == null){\n            return\n        }\n        if (this.currentPlayIndex === this.playlist.length - 1 ){\n            this.currentPlayIndex = 0\n        }\n        else{\n            this.currentPlayIndex += 1\n        }\n\n        \n        this.PlayMusic(this.playlist[this.currentPlayIndex])\n    }\n\n    MusicPlayerListener(event){\n        /* \n        触发本事件时，应在event.info对象中携带以下数据：\n        event = {\n            tid: 歌单id,\n            index: 将播放的歌曲在下面歌单中的位置,\n            list: 歌单数组 //元素属性按照MusicListDisplay.js中的MusicListDisplay::state.musicList中的元素为标准\n        }\n        */\n       if (this.currentTid !== event.tid){\n            this.playlist = event.list\n            this.currentTid = event.tid\n       }\n       this.currentPlayIndex = event.index\n       this.PlayMusic(event.list[event.index])\n    }\n\n    setAudio(resourceURL, playedTime=0, play=true){\n        this.audio.src = resourceURL\n        this.audio.ontimeupdate =function(){\n            let spentMinutes = Math.floor(this.audio.currentTime / 60)\n            let spentSeconds = Math.floor(this.audio.currentTime % 60)\n            spentMinutes = spentMinutes >9 ? spentMinutes: \"0\"+spentMinutes\n            spentSeconds = spentSeconds >9 ? spentSeconds: \"0\"+spentSeconds\n\n            let durationMinutes = Math.floor(this.audio.duration / 60)\n            let durationSeconds = Math.floor(this.audio.duration % 60)\n            durationMinutes = durationMinutes >9 ? durationMinutes: \"0\"+durationMinutes\n            durationSeconds = durationSeconds >9 ? durationSeconds: \"0\"+durationSeconds\n\n            this.setState({\n                progress: (this.audio.currentTime / this.audio.duration) * 100,\n                durationLabel: `${spentMinutes}:${spentSeconds} / ${durationMinutes}:${durationSeconds}`\n            })\n        }.bind(this)\n        this.audio.onloadedmetadata = function(){\n            this.audio.currentTime = playedTime\n        }.bind(this)\n        \n        this.audio.volume = this.state.volume / 100\n        if (play === true){\n            this.audio.play()\n            this.setState({ playBtnIcon: <PauseCircleFilled style={{fontSize: 42}}/>})\n        } \n    }\n\n    PlayEndEvent(){\n        if (this.currentPlayIndex === this.playlist.length -1){\n            this.currentPlayIndex = 0\n        }\n        else{\n            this.currentPlayIndex += 1\n        }\n        this.PlayMusic(this.playlist[this.currentPlayIndex])\n    }\n\n    PlayMusic(musicInfo, playedTime = 0, play = true) {\n        console.log(musicInfo)\n        //config.saveHistory(this.currentTid, this.playlist, this.currentPlayIndex, this.audio.currentTime)\n        this.audioInfo = {\n            song_cover_pmid: musicInfo.album_ptid,\n            song_name: musicInfo.song_name,\n            singer:musicInfo.singer,\n            duration: null\n        }\n\n        let qualityName = \"none\"\n        let qulityColor = \"orange\"\n        let filename = musicInfo.file.media_fid\n        qualityName = \"HQ\"\n        qulityColor= \"rgb(78, 140, 151)\"\n       \n\n        this.setState({\n            music_cover_url: `http://music.inkneko.com/music_base/dimension_tripper.jpg`,\n            music_name: musicInfo.song_name,\n            music_singer: musicInfo.singer\n        })\n\n        this.setState({\n            qulity: qualityName,\n            qulityColor: qulityColor\n        })\n\n        let resourceURL = `http://music.inkneko.com/music_base/${filename}.mp3`\n        this.setAudio(resourceURL, playedTime, play)\n        \n    }\n\n    /*\n    PlayMusic(musicInfo, playedTime=0, play=true){\n        config.saveHistory(this.currentTid, this.playlist, this.currentPlayIndex, this.audio.currentTime)\n        this.audioInfo = {\n            song_cover_pmid: musicInfo.album_ptid,\n            song_name: musicInfo.song_name,\n            singer:musicInfo.singer,\n            duration: null\n        }\n\n        let qualityName = \"none\"\n        let qulityColor = \"orange\"\n        let filename = musicInfo.file.media_fid\n        if (musicInfo.file.size_flac > 0){\n            qualityName = \"SQ\"\n            qulityColor = \"rgb(243, 82, 53)\"\n            filename = `F00${filename}.flac`\n        }\n        else if (musicInfo.file.size_320mp3 > 0){\n            qualityName = \"HQ\"\n            qulityColor= \"rgb(78, 140, 151)\"\n            filename = `M800${filename}.mp3`\n        }\n        else if (musicInfo.file.size_128mp3 > 0){\n            qualityName = \"128kpbs\"\n            qulityColor = \"black\"\n            filename = `M500${filename}.mp3`\n        }\n        else{\n            alert(\"无音乐文件信息\")\n            this.audio.src = \"\"\n            return\n        }\n\n        this.setState({\n            music_cover_url: `https://y.gtimg.cn/music/photo_new/T002R300x300M000${musicInfo.album_pmid}.jpg`,\n            music_name: musicInfo.song_name,\n            music_singer: musicInfo.singer\n        })\n\n        if (fs.existsSync(`${config.downloadRootPath}/${filename}`)===true){\n            let extension = \"\"\n            if (qualityName === \"SQ\"){\n                extension = \"flac\"\n            }\n            else{\n                extension = \"mp3\"\n            }\n            let resourceURL = this.audio.src = `data:audio/${extension};base64,${fs.readFileSync(`${config.downloadRootPath}/${filename}`, \"base64\")}`\n\n            this.setState({\n                qulity: qualityName,\n                qulityColor: qulityColor\n            })\n            this.setAudio(resourceURL, playedTime, play)\n            return\n        }\n        else if (config.cookie === \"\"){ //登录失效的简易判断\n            qualityName = \"128kpbs\"\n            qulityColor = \"black\"\n            filename = `M500${musicInfo.file.media_fid}.mp3`\n        }\n\n        this.setState({\n            qulity: qualityName,\n            qulityColor: qulityColor\n        })\n\n        let data =`{\"queryvkey\":{\"module\":\"vkey.GetVkeyServer\",\"method\":\"CgiGetVkey\",\"param\":{\"guid\":\"8397041246\",\"songmid\":[\"${musicInfo.mid}\"],\"songtype\":[1],\"filename\" : [ \"${filename}\" ],\"uin\":\"${config.login_uin}\",\"loginflag\":1,\"platform\":\"20\"}},\"comm\":{\"uin\":${config.login_uin},\"format\":\"json\",\"ct\":19,\"cv\":1733}}`\n        let option = {\n            hostname: \"inkneko.com\",\n            port: 8080,\n            path: `/cgi-bin/load.py?-=${encodeURIComponent(data)}`\n        }\n        https.request(option, function(event){\n            let response = \"\"\n            event.on(\"data\", function(chunk){\n                response += chunk\n            })\n            event.on(\"end\", function(){\n                console.log(response)\n                let signature = response\n                let path = `/cgi-bin/musics.fcg?sign=${signature}&loginUin=${config.login_uin}&hostUin=0&format=json&inCharset=utf8&outCharset=utf-8&notice=0&platform=yqq.json&needNewCode=0&data=${data}`\n                let option = {\n                    hostname: \"u.y.qq.com\",\n                    port: 80,\n                    path: encodeURI(path),\n                    headers : {\n                        \"User-Agent\": config.ua,\n                        \"Cookie\": config.cookie\n                    }\n                }\n\n                http.request(option, function(res){\n                    let str = \"\"\n                    res.on(\"data\", function(chunk){\n                        str += chunk\n                    })\n\n                    res.on(\"end\", function(){\n                        let serviceResponse = JSON.parse(str)\n                        let resourceURL = `http://ws.stream.qqmusic.qq.com/${serviceResponse[\"queryvkey\"][\"data\"][\"midurlinfo\"][0][\"purl\"]}`\n                        if (serviceResponse[\"queryvkey\"][\"data\"][\"midurlinfo\"][0][\"purl\"] === \"\"){\n                            this.setState({\n                                qulity: \"登录失效\"\n                            })\n                            this.audio.src = \"\"\n                            return\n                        }\n                        this.setAudio(resourceURL, playedTime, play)\n                    }.bind(this))\n                }.bind(this)).end()\n            }.bind(this))\n        }.bind(this)).end()\n    }*/\n\n    OnSliderChange(event, newValue){\n        if (this.audio.src===\"\"){\n            return\n        }\n        this.setState({progress: newValue})\n        this.audio.currentTime = this.audio.duration * (newValue/100)\n        if (this.audio.paused === true){\n            this.OnPauseEvent()\n        }\n    }\n\n    OnVolumeSliderChange(event, newValue){\n        this.setState({volume: newValue})\n        this.audio.volume = newValue / 100\n    }\n\n}\n\nexport default MusicPlayer","import React from \"react\"\nimport \"./css/AppMainFrame.css\"\n\nimport LeftPanel from \"./LeftPanel\"\nimport TitleBar from \"./TitleBar\"\nimport MusicPlayer from \"./MusicPlayer\"\n\nclass AppMainFrame extends React.Component{\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n        return (\n        <div className=\"app-main-frame\">\n            <div className=\"left-control-panel\">\n                <LeftPanel/>\n            </div>\n            <div className=\"display-page\">\n                <TitleBar/>\n                <div id=\"display-browser\"/>\n                <div id=\"music-player\">\n                    <MusicPlayer/>\n                </div>\n                <div id=\"music-disk-page\" style={{display:\"hidden\"}}/>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default AppMainFrame","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppMainFrame from \"./components/AppMainFrame\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppMainFrame/>\n  </React.StrictMode>,\n  document.getElementsByTagName(\"body\")[0]\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}